// Code generated by MockGen. DO NOT EDIT.
// Source: /Users/coderrob/go/src/Meraki-CMX-Receiver/pkg/services/location_service.go

// Package mock_services is a generated GoMock package.
package mocks

import (
	models "coderrob.com/meraki-cmx-receiver/pkg/models"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockILocationService is a mock of ILocationService interface
type MockILocationService struct {
	ctrl     *gomock.Controller
	recorder *MockILocationServiceMockRecorder
}

// MockILocationServiceMockRecorder is the mock recorder for MockILocationService
type MockILocationServiceMockRecorder struct {
	mock *MockILocationService
}

// NewMockILocationService creates a new mock instance
func NewMockILocationService(ctrl *gomock.Controller) *MockILocationService {
	mock := &MockILocationService{ctrl: ctrl}
	mock.recorder = &MockILocationServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockILocationService) EXPECT() *MockILocationServiceMockRecorder {
	return m.recorder
}

// UpdateLocations mocks base method
func (m *MockILocationService) UpdateLocations(feed *models.Feed) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateLocations", feed)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateLocations indicates an expected call of UpdateLocations
func (mr *MockILocationServiceMockRecorder) UpdateLocations(feed interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateLocations", reflect.TypeOf((*MockILocationService)(nil).UpdateLocations), feed)
}
